
$font-size: 14px;
$icon-size: $font-size * 3;
$box-shadow-color: $gray-400;
$box-shadow:  0px 5px 15px $box-shadow-color;
$box-shadow-hover:  0px 5px 15px darken($box-shadow-color, 15%);

.o-icon {
	display: inline-block;
	width: $icon-size;
	height: $icon-size;
	box-shadow: $box-shadow;
	margin: 0.25rem;
    outline: none;
    position: relative;
    overflow: hidden;
    vertical-align: middle;

	span {
		//
		display: inline-block;

		i, svg {
			margin: 0 auto;
			display: inline-block;
		    vertical-align: top;
		    height: .875rem;
		    width: .875rem;
		}
	}

	@each $color, $value in $theme-colors {
		&.#{$color}.background {
			background-color: map-get($theme-colors, $color);

			@if $color == 'light' {
				color: $gray-800;
			} @else {
				color: $white;
			}

			&:hover:not(:focus):not(:active) {
				box-shadow: $box-shadow-hover;
			}
		}

		&.#{$color}.tinted {
			background-color: map-get($theme-colors, $color);
			box-shadow: inset 0 2px 0px lighten( $value, 15% ), $box-shadow;

			@if $color == 'light' {
				color: $gray-800;
			} @else {
				color: $white;
			}

			&:hover:not(:focus):not(:active) {
				box-shadow: inset 0 2px 0px lighten( $value, 10% ), $box-shadow-hover;
			}
		}

		&.#{$color}.shaded {
			background-color: map-get($theme-colors, $color);
			box-shadow: inset 0 -1px 0px darken( $value, 10% ), $box-shadow;

			@if $color == 'light' {
				color: $gray-800;
			} @else {
				color: $white;
			}

			&:hover:not(:focus):not(:active) {
				box-shadow: inset 0 -1px 0px darken( $value, 5% ), $box-shadow-hover;
			}
		}

		&.#{$color}.finish {
			background-color: $value;

			@if $color == 'light' {
				color: $gray-800;
			} @else {
				color: $white;
			}

			&:hover:not(:focus):not(:active) {
				box-shadow: $box-shadow-hover;
			}

			&::before {
				content: '';
				display: block;
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				$tint: mix(white, $value, 30%);
				background: linear-gradient(180deg, $tint,  rgba(255, 255, 255, 0));
			}
		}

		&.#{$color}.scoring {
			background-color: $value;

			@if $color == 'light' {
				color: $gray-800;
			} @else {
				color: $white;
			}

			&:hover:not(:focus):not(:active) {
				box-shadow: $box-shadow-hover;
			}

			&::before {
				content: '';
				display: block;
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				$tint: mix(black, $value, 30%);
				background: linear-gradient(180deg, rgba($tint, 0.5) 50%,  rgba(255, 255, 255, 0) 51%);
			}
}
	}
}

.o-icon {
	&--circle {
		@extend .o-icon;
		border-radius: 50%;
		width: round(($icon-size / 100) * 90);
		height: round(($icon-size / 100) * 90);
		span {
			margin-top: round(($font-size / 100) * 80);
			margin-left: round(($font-size / 100) * 74);
			padding: ($icon-size / 100) * 4.175;
		}
	}

	&--square, &--square--no-rad  {
		@extend .o-icon;
		border-radius: 0.25rem;
		span {
			margin-top: ($font-size / 100) * 65;
			margin-left: ($font-size / 100) * 65;
			padding: ($icon-size / 100) * 12.24;
			width: ($icon-size / 100) * 75.52;
			height: ($icon-size / 100) * 75.52;
		}		
	}

	&--hrect, &--hrect--no-rad  {
		@extend .o-icon;
		height: ($icon-size / 100) * 66.65;
		width: ($icon-size / 100) * 91.65;
		padding-left: ($icon-size / 100) * 50;
		border-radius: 0.25rem;
		span {
			//margin-top: ($font-size / 100) * 50;
			margin-left: (($icon-size / 100) * 25) * -1;
			padding: ($icon-size / 100) * 16.675 ($icon-size / 100) * 4.175;
		}	
	}

	&--vrect, &--vrect--no-rad  {
		@extend .o-icon;
		height: ($icon-size / 100) * 91.65;
		width: ($icon-size / 100) * 66.65;
		border-radius: 0.25rem;
		span {
			margin-top: round(($font-size / 100) * 78.57);
			padding: ($icon-size / 100) * 4.175 ($icon-size / 100) * 16.675;
		}	
	}

	&--square#{&}--no-rad,&--hrect#{&}--no-rad,&--vrect#{&}--no-rad {
		border-radius: 0;
	}

	&--square.animated,&--hrect.animated,&--vrect.animated,&--circle.animated {
		span {
			position: relative;

			& svg {
				position: absolute;
				top: round(($font-size / 100) * 30) / 2 * -1;
				left: round(($font-size / 100) * 45) / 2;
			    width: .875em;
			}

			& svg + svg {
				opacity: 0;
			}
		}
	}

	&--square.animated.showing,&--hrect.animated.showing,&--vrect.animated.showing,&--circle.animated.showing {
		animation: radialBg .2s ease 0s 1 normal none;
		span { 
			position: relative;

			& svg:first-child {
				animation: left90FirstElement .2s ease 0s 1 normal forwards;
			}
			& svg + svg {
				animation: displayElement  .2s ease 0s 1 normal forwards;
			}
		}
	}

	&--square.animated.shown,&--hrect.animated.shown,&--vrect.animated.shown,&--circle.animated.shown {
		span { 
			position: relative;

			& svg:first-child {
				animation: left90FirstElement 0s ease 0s 1 normal forwards;
			}
			& svg + svg {
				animation: displayElement  0s ease 0s 1 normal forwards;
			}
		}
	}

	&--square.animated.shown.hidding,&--hrect.animated.shown.hidding,&--vrect.animated.shown.hidding,&--circle.animated.shown.hidding {
		animation: radialBg .2s ease 0s 1 normal none; 
		span { 
			position: relative;

			& svg:first-child {
				animation: displayElement  0.2s ease 0s 1 normal both;
			}
			& svg + svg {
				animation: left90FirstElement 0.2s ease 0s 1 reverse both;
			}
		}
	}

	

}




@keyframes left90FirstElement {
	0% {
		transform: rotate(0deg);
		width: .875em;
		//trasform-origin: center center;
	}
	96%{
		transform: rotate(-90deg);
		opacity: 1;
		//trasform-origin: center center;
		width: .875em;
	}
	97% {
		//transform: scale(1);
		opacity: 0;
		width: 0;
	}
	100% {
		transform: rotate(-90deg);
		width: 0;
		opacity: 0;
		//transform: scale(0);
	    //width: 0;
	}
}

@keyframes radialBg {
	0% {
		background-image: radial-gradient(rgba(176,176,176,1) 0%,rgba(176, 176, 176, 0) 1%);
	}
	10% {
		background-image: radial-gradient(rgba(176,176,176,1) 9%,rgba(176, 176, 176, 0) 10%);
	}
	20% {
		background-image: radial-gradient(rgba(176,176,176,1) 19%,rgba(176, 176, 176, 0) 20%);
	}
	30% {
		background-image: radial-gradient(rgba(176,176,176,1) 29%,rgba(176, 176, 176, 0) 30%);
	}
	40% {
		background-image: radial-gradient(rgba(176,176,176,1) 39%,rgba(176, 176, 176, 0) 40%);
	}
	50% {
		background-image: radial-gradient(rgba(176,176,176,1) 49%,rgba(176, 176, 176, 0) 50%);
	}
	60% {
		background-image: radial-gradient(rgba(176,176,176,1) 59%,rgba(176, 176, 176, 0) 60%);
	}
	70% {
		background-image: radial-gradient(rgba(176,176,176,1) 69%,rgba(176, 176, 176, 0) 70%);
	}
	80% {
		background-image: radial-gradient(rgba(176,176,176,1) 79%,rgba(176, 176, 176, 0) 80%);
	}
	90% {
		background-image: radial-gradient(rgba(176,176,176,1) 89%,rgba(176, 176, 176, 0) 90%);
	}
	100% {
		background-image: radial-gradient(rgba(176,176,176,1) 99%,rgba(176, 176, 176, 0) 100%);
	}
}

@keyframes displayElement {
	0% {
		opacity: 0;
	}
	98% {
		opacity: 0;
	}
	99% {
		opacity: 1;
	}
	100% {
		opacity: 1;
	}
}

@keyframes right90 {
   0% {
   	svg {
   		transform: rotate(0deg);
   	}
   }
  50%{
  	svg {
  		transform: rotate(90deg);
  	}
  }
}